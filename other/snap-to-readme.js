const path = require('path')
const fs = require('fs')

const readmePath = path.join(__dirname, '../README.md')
const readme = fs.readFileSync(readmePath, 'utf8')
const snaps = require('../src/__tests__/__snapshots__/macro.js.snap')

const snapNumberRegex = /^macros README:(\d+)/
const snapTitleRegex = /^macros README:\d+(.*) \d+$/
const readmeSnapRegex = /<!-- SNAP_TO_README:START -->[\s\S]*?<!-- SNAP_TO_README:END -->/
const snapsToUse = Object.keys(snaps)
  .filter(name => name.startsWith('macros README'))
  .sort((nameA, nameB) =>
    Number(nameA.match(snapNumberRegex)[1]) >
    Number(nameB.match(snapNumberRegex)[1])
      ? 1
      : 0,
  )
  .reduce((acc, key) => {
    const title = key.match(snapTitleRegex)[1].trim()
    const contents = snaps[key].trim()
    return [acc, `**${title}**`, `~~~javascript\n${contents}\n~~~`]
      .join('\n\n')
      .replace(/~/g, '`')
  }, [])

const newReadme = readme.replace(
  readmeSnapRegex,
  `
<!-- SNAP_TO_README:START -->
<!-- This section is generated by the other/snap-to-readme.js script. -->
<!-- Do not edit directly. -->

${snapsToUse.trim()}

<!-- SNAP_TO_README:END -->
  `.trim(),
)

fs.writeFileSync(readmePath, newReadme)
